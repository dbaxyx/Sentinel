<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.alibaba.sentinel.mapper.OrderRecordMapper" >
  <resultMap id="BaseResultMap" type="com.alibaba.dao.entity.OrderRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_note" property="orderNote" jdbcType="VARCHAR" />
    <result column="order_logistic_id" property="orderLogisticId" jdbcType="VARCHAR" />
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="modify_date" property="modifyDate" jdbcType="TIMESTAMP" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, order_note, order_logistic_id, order_id, create_date, modify_date, user_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from order_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from order_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.alibaba.dao.entity.OrderRecord" >
    insert into order_record (id, order_note, order_logistic_id, 
      order_id, create_date, modify_date, 
      user_id)
    values (#{id,jdbcType=INTEGER}, #{orderNote,jdbcType=VARCHAR}, #{orderLogisticId,jdbcType=VARCHAR}, 
      #{orderId,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, #{modifyDate,jdbcType=TIMESTAMP}, 
      #{userId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.alibaba.dao.entity.OrderRecord" >
    insert into order_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderNote != null" >
        order_note,
      </if>
      <if test="orderLogisticId != null" >
        order_logistic_id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="modifyDate != null" >
        modify_date,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderNote != null" >
        #{orderNote,jdbcType=VARCHAR},
      </if>
      <if test="orderLogisticId != null" >
        #{orderLogisticId,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyDate != null" >
        #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.alibaba.dao.entity.OrderRecord" >
    update order_record
    <set >
      <if test="orderNote != null" >
        order_note = #{orderNote,jdbcType=VARCHAR},
      </if>
      <if test="orderLogisticId != null" >
        order_logistic_id = #{orderLogisticId,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyDate != null" >
        modify_date = #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.alibaba.dao.entity.OrderRecord" >
    update order_record
    set order_note = #{orderNote,jdbcType=VARCHAR},
      order_logistic_id = #{orderLogisticId,jdbcType=VARCHAR},
      order_id = #{orderId,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      modify_date = #{modifyDate,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>